#! /usr/bin/perl -w

use Term::ANSIColor;

$red = color 'red';
$white = color 'white';

$pattern = shift @ARGV;
$replace = "";
$doreplace = 0;
$separator = "--\n";

if ($ARGV[0] and $ARGV[0] eq "-r") {
    shift @ARGV;
    $replace = shift @ARGV;
    $doreplace = 1;
    $separator = "";
}

@mathenvs = ("math", "displaymath","equation", "eqnarray", "align", "gather", "multline", "flalign", "alignat");

$mathpattern = join("\\*?|", @mathenvs) . "\\*?";

while (<>) {
    $line = $_;
    $oldrest = "";

    while ($line) {

	if ($line =~ /(\\begin{($mathpattern)}|\\\(|\\\[)/) {

	    $endmath = "\\" . $1;
	    $endmath =~ s/\*/\\*/;
	    $endmath =~ s/\(/\\(/;
	    $endmath =~ s/\[/\\[/;
	    $beginmath = $endmath;

	    $endmath =~ s/begin/end/;
	    $endmath =~ s/\(/)/;
	    $endmath =~ s/\[/]/;

	    until ($line =~ /$endmath/) {
		$line .= <>;
	    }

	    ($prior, $begin, $test, $end, $rest) = ($line =~ /(.*?)($beginmath)(.*?)($endmath)(.*)/s);

	    if ($doreplace) {
		$test =~ s/$pattern/$replace/sg;
		print $prior . $begin . $test . $end;
		$line = $rest;
	    } else {
		if ($test =~ s/($pattern)/$red$1$white/sg) { 
		    print $prior . $begin . $test . $end;
		    $oldrest = $line = $rest;
		    $line or print "--\n";
		} else {
		    $line = "";
		    $oldrest and print $oldrest . $separator;
		}
	    }

	} else {
	    $doreplace and print $line;
	    $oldrest and print $oldrest . $separator;
	    last;
	}
    }

}
